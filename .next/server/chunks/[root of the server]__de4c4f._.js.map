{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/laman/%D0%97%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B8/client/src/app/api/recipe/%5Brid%5D/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport recipeData from '@/data/krecipes.json';\n\nexport async function GET(request, { params }) {\n  const { rid } = params; // Получаем rid из параметров запроса\n\n  try {\n    // Ищем рецепт по rid\n    console.log(rid);\n    const recipe = recipeData.find((recipe) => recipe.id.$oid == rid);\n\n    if (!recipe) {\n      return NextResponse.json({ error: 'Recipe not found' }, { status: 404 });\n    }\n\n    // Форматируем данные для ответа\n    const response = {\n      bid: recipe.id.$oid,\n      title: recipe.title,\n      portion: recipe.portion,\n      description: recipe.description,\n      cookingTime: recipe.cookingTime,\n      kkal: recipe.nutritionalValue.kkal,\n      bel: recipe.nutritionalValue.bel,\n      fats: recipe.nutritionalValue.fats,\n      carbs: recipe.nutritionalValue.carbs,\n      images: recipe.images,\n      ingredients: recipe.ingredients,\n      steps: recipe.steps,\n    };\n\n    return NextResponse.json(response, { status: 200 });\n  } catch (error) {\n    console.error('Error fetching recipe:', error);\n    return NextResponse.json({ error: 'Failed to fetch recipe' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAO,EAAE,EAAE,MAAM,EAAE;IAC3C,MAAM,EAAE,GAAG,EAAE,GAAG,QAAQ,qCAAqC;IAE7D,IAAI;QACF,qBAAqB;QACrB,QAAQ,GAAG,CAAC;QACZ,MAAM,SAAS,+FAAA,CAAA,UAAU,CAAC,IAAI,CAAC,CAAC,SAAW,OAAO,EAAE,CAAC,IAAI,IAAI;QAE7D,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,gCAAgC;QAChC,MAAM,WAAW;YACf,KAAK,OAAO,EAAE,CAAC,IAAI;YACnB,OAAO,OAAO,KAAK;YACnB,SAAS,OAAO,OAAO;YACvB,aAAa,OAAO,WAAW;YAC/B,aAAa,OAAO,WAAW;YAC/B,MAAM,OAAO,gBAAgB,CAAC,IAAI;YAClC,KAAK,OAAO,gBAAgB,CAAC,GAAG;YAChC,MAAM,OAAO,gBAAgB,CAAC,IAAI;YAClC,OAAO,OAAO,gBAAgB,CAAC,KAAK;YACpC,QAAQ,OAAO,MAAM;YACrB,aAAa,OAAO,WAAW;YAC/B,OAAO,OAAO,KAAK;QACrB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;YAAE,QAAQ;QAAI;IACnD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAyB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}